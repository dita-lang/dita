<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="ditavalref" xml:lang="en-us" >
  <title><xmlelement>ditavalref</xmlelement></title>
  <shortdesc>The <xmlelement>ditavalref</xmlelement> element references a DITAVAL document that
    specifies filter conditions to be used when processing a map or map
    branch.<!--Other DITAVAL-reference domain elements can be used to imply multiple copies of the map branch that contains them and so apply a different set of conditions to each copy.--></shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>branch filtering<indexterm>examples</indexterm></indexterm>
        <indexterm>conditional processing<indexterm>subset of a map</indexterm></indexterm>
        <indexterm>DITAVAL reference
            domain<indexterm><xmlelement>ditavalref</xmlelement></indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <refbody>
    <section id="processing-expectations">
      <title>Processing expectations</title>
      <p>When a <xmlelement>ditavalref</xmlelement> element is included in a map, the conditions in
        the referenced DITAVAL document are used to filter the elements in the branch. The branch
        includes the parent element that contains the <xmlelement>ditavalref</xmlelement> element,
        any child elements, and all resources that are referenced by the parent element or its
        children. While there is no technical restriction that forces
          <xmlelement>ditavalref</xmlelement> to appear before peer topic references, placing them
        first is considered a best practice and all examples in the specification will use this
        convention.</p>
      <p>In the simple case, a map can use <xmlelement>ditavalref</xmlelement> as
        follows:<codeblock>&lt;map>
  &lt;topicref href="sampleBranch.dita" audience="admin">
    &lt;topicmeta>
      &lt;navtitle>Navigation title for branch&lt;/navtitle>
    &lt;/topicmeta>
    &lt;ditavalref href="conditions.ditaval"/>
    &lt;topicref href="insideBranch.dita" platform="win linux mac"/>
  &lt;/topicref>
  &lt;!-- Other branches not affected by conditions.ditaval -->
&lt;/map></codeblock></p>
      <p>The filtering conditions specified in the <filepath>conditions.ditaval</filepath> file
        apply to the following:<ul>
          <li>The <xmlelement>topicref</xmlelement> element that references
              <filepath>sampleBranch.dita</filepath> and all child elements:
              <xmlelement>topicmeta</xmlelement>, <xmlelement>navtitle</xmlelement>, and
              <xmlelement>topicref</xmlelement> elements</li>
          <li>The <filepath>sampleBranch.dita</filepath> topic</li>
          <li>The <filepath>insideBranch.dita</filepath> topic</li>
        </ul></p>
      <p>When more than one <xmlelement>ditavalref</xmlelement> element is specified in the same
        branch at the same level, the effective result is one copy of the branch for each
          <xmlelement>ditavalref</xmlelement> element. If the example above contains a reference to
          <filepath>otherConditions.ditaval</filepath> as a peer to the existing
          <xmlelement>ditavalref</xmlelement> element, the rendered version of this map would
        reflect two copies of "Sample branch", each reflecting the conditions that are specified in
        the corresponding DITAVAL document. One copy is created using the conditions in
          <filepath>conditions.ditaval</filepath>, while the other copy uses the conditions from
          <filepath>otherConditions.ditaval</filepath>. Map authors can use specific elements from
        the DITAVAL reference domain to indicate how resources <ph >are</ph>
        renamed, or processors <ph >can</ph> recover from naming collisions by
        using an alternate naming scheme. See <xref href="#ditavalref/limitations" format="dita"/>
        below for more information.</p>
      <p>If DITAVAL conditions are specified at multiple levels within a single branch, "exclude"
        conditions that are specified at a higher level take precedence. <ph 
          >In the following branch, assume alternate rules are specified for the condition
            <codeph>audience="novice"</codeph>, with the value set to "exclude" in
            <filepath>highLevel.ditaval</filepath> and "include" in
            <filepath>lowLevel.ditaval</filepath>. In that case, the "exclude" condition specified
          in <filepath>highLevel.ditaval</filepath> takes precedence and so applies to the entire
          branch. This is true regardless of how the "exclude" condition is specified within
            <filepath>highLevel.ditaval</filepath>. That is, there <ph 
            >might</ph> be a specific rule for <codeph>audience="novice"</codeph>; alternatively,
          the <xmlatt>audience</xmlatt> attribute <ph >might</ph> be set to
          "exclude" by default, with no specific condition specified for the value
            <codeph>audience="novice"</codeph>.</ph><codeblock>&lt;topicref href="ancestor.dita">
  &lt;ditavalref href="highLevel.ditaval"/>
  &lt;topicref href="descendent.dita">
    &lt;ditavalref href="lowLevel.ditaval"/>
    &lt;!-- Other topicrefs -->
  &lt;/topicref>
&lt;/topicref></codeblock></p>
      <p>If a <xmlelement>ditavalref</xmlelement> element is used that does not specify the
          <xmlatt>href</xmlatt> attribute, the element is still processed but no additional
        filtering is applied. This can be used to create an unfiltered copy of a map branch
        alongside other filtered copies; other aspects of the <xmlelement>ditavalref</xmlelement>
        (such as any specified key scope or modified resource name) will still be applied to the
        branch.</p>
    </section>
    <section id="limitations">
      <title>Limitations</title>
      <draft-comment author="robander">This topic overall has far more processing information than
        seems appropriate for an element reference topic; there is likely a lot of overlap /
        duplication of information contained in the Branch Filtering section of the arch spec. Most
        of this information should be moved there, likely including the full set of
        Limitations.</draft-comment>
      <p>The following limitations apply when using the <xmlelement>ditavalref</xmlelement> element;
        these limitations cannot be enforced in a DTD or other XML grammar files.</p>
      <p outputclass="errorcondition">When the use of the <xmlelement>ditavalref</xmlelement>
        element results in multiple copies of a branch, resource names within that branch can be
        controlled with sub-elements of the effective <xmlelement>ditavalref</xmlelement>. For
        situations where resource names are relevant, it is an error condition for multiple
          <xmlelement>ditavalref</xmlelement> elements to result in conflicting resource names for
        different content. For example, the following map fragment would result in two distinct
        copies of the <filepath>c.dita</filepath> topic with the same file
        name:<codeblock>&lt;topicref href="c.dita">
  &lt;ditavalref href="one.ditaval"/>
  &lt;ditavalref href="two.ditaval"/>
&lt;/topicref>
</codeblock></p>
      <p>Processors <term outputclass="RFC-2119">MAY</term> recover by using an alternate naming
        scheme for the conflicting copies. <draft-comment author="Kristen J Eberlein"
          time="15 May 2019" audience="spec-editors">
          <p>Need more information about what situation the processor is recovering from ...</p>
        </draft-comment><draft-comment author="robander">For the above, it would be recovering from
          a map that instructs it to create two files of the same name, with different filter
          conditions applied.</draft-comment></p>
    </section>
    <section id="specialization-hierachy">
      <title>Specialization hierarchy</title>
      <p>The <xmlelement>ditavalref</xmlelement> element is specialized from
          <xmlelement>topicref</xmlelement>. It is defined in the DITAVAL-reference domain
        module.</p>
    </section>
    <section conkeyref="content-models-ditavalref/ditavalref.element" id="content-model"/>
    <section id="attributes">
      <title>Attributes</title>
      <p>The following attributes are available on this element: <ph
          conkeyref="reuse-attributes/ref-universalatts"/> (except for <xmlatt>conkeyref</xmlatt>,
        which is removed for all elements in this domain), <xref
          keyref="attributes-common/attr-format"><xmlatt>format</xmlatt></xref>, <xref
          keyref="attributes-common/attr-href"><xmlatt>href</xmlatt></xref>, <xref
          keyref="attributes-common/attr-impose-role"><xmlatt>impose-role</xmlatt></xref>, and <xref
          keyref="attributes-common/attr-scope"><xmlatt>scope</xmlatt></xref>.</p>
      <p id="attr-exception" outputclass="attr-exception">For this element:<ul id="ul_xlk_gc4_qpb">
          <li>The <xmlatt>format</xmlatt> attribute has a default value of
              <keyword>ditaval</keyword>.</li>
          <li>The <xmlatt>impose-role</xmlatt> attribute has a fixed value of
              <keyword>keeptarget</keyword>.</li>
          <li>The <xmlatt>href</xmlatt> attribute specivies a reference to a DITAVAL document. If
            the <xmlatt>href</xmlatt> attribute is unspecified, this
              <xmlelement>ditavalref</xmlelement> will not result in any new filtering behavior, but
            other aspects of the element are still evaluated.</li>
          <li>The <xmlatt>processing-role</xmlatt> attribute has a default value of
              <keyword>resource-only</keyword>.</li>
        </ul><draft-comment author="robander">DITA 1.3 said that format MUST be ditaval, and that no
          value other than "resource-only" is valid for processing role. Should these be #FIXED in
          the grammar files?</draft-comment></p>
      <!--<dl><dlentry><dt id="ditavalref-href"><xmlatt>href</xmlatt></dt><dd>Provides a reference to a DITAVAL document. If the <xmlatt>href</xmlatt> attribute is unspecified, this <xmlelement>ditavalref</xmlelement> will not result in any new filtering behavior, but other aspects of the element are still evaluated. See <xref keyref="attributes-href"/> for general information on the format and processing implications of the <xmlatt>href</xmlatt> attribute.</dd></dlentry><dlentry><dt id="ditavalref-format"><xmlatt>format</xmlatt></dt><dd>Format of the target document, which <term outputclass="RFC-2119">MUST</term> be a DITAVAL document. The default value for this element is <keyword>ditaval</keyword>. See <xref keyref="attributes-format"/> for more information.</dd></dlentry><dlentry><dt id="ditavalref-processing-role"><xmlatt>processing-role</xmlatt></dt><dd>The processing role defaults to "resource-only" for DITAVAL documents, which are only used for processing and do not contain content. There is no other valid value for this attribute on this element.</dd></dlentry></dl>-->
    </section>
<example id="example" otherprops="examples" conkeyref="reuse-examples/ditavalref"/>
  </refbody>
</reference>
