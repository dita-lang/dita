<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "reference.dtd">
<reference id="reltable" xml:lang="en-us">
<title><xmlelement>reltable</xmlelement></title>
<shortdesc>A relationship table is a mechanism that creates relationships
    among topics, based on the familiar table model of rows, columns, and
    cells.</shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>elements<indexterm>basic
              map<indexterm><xmlelement>reltable</xmlelement></indexterm></indexterm></indexterm>
        <indexterm>examples<indexterm>relationship tables</indexterm></indexterm>
        <indexterm>maps<indexterm>examples<indexterm>relationship
          tables</indexterm></indexterm></indexterm>
        <indexterm>relationship
          tables<indexterm>examples</indexterm><indexterm>overview</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
<refbody>
    <section id="usage-information">
      <title>Usage information</title>
      <div rev="review-b">
        <p>Relationship tables can be used in conjunction with hierarchies
          and groups to manage all the related links in an information
          set.</p>
        <p>Each column in a relationship table typically represents a
          specific role in a set of relationships, and each row defines
          relationships between the resources that are referenced in the
          different cells of that row.</p>
        <p>A frequently-used type of relationship table uses the following
          structure:</p>
        <ul>
          <li>The first column contains references to task topics.</li>
          <li>The second column contains references to concept topics.</li>
          <li>The third column contains references to reference
            topics.</li>
        </ul>
        <p>Such a relationship table establishes relationships between task
          topics and the concept and reference topics that support the
          tasks. It help authors and architects determine where related
          information is missing or undefined.</p>
      </div>
      <p>When a title is associated with a relationship table, the title typically is used as an
        authoring convenience and is not displayed in generated publications.</p>
      <draft-comment author="Kristen J Eberlein" time="22 November 2021">
        <p>It would be good to replace the reference to a CTR reltable with
          an example of a reltable that provides links between topics and
          external resources.</p>
      </draft-comment>
    </section>
    <section id="processing-expectations">
      <title>Processing expectations</title>
      <p>By default, the contents of a <xmlelement>reltable</xmlelement> element are not rendered in
        a table of contents; they are used only to define relationships that can be expressed as
        topic-to-topic links. The <xmlelement>relcell</xmlelement> elements can contain
          <xmlelement>topicref</xmlelement> elements, which are then related to other
          <xmlelement>topicref</xmlelement> elements in the same row (although not necessarily in
        the same cell).</p>
      <p>Within a root map, the effective relationship table is the union
        of all relationship tables in the map hierarchy.</p>
    </section>
    <section conkeyref="content-models-reltable/reltable.element" id="content-model"/>
    <section id="attributes">
      <title>Attributes</title>
      <p>The following attributes are available on this element: <ph
          conkeyref="reuse-attributes/ref-commonmapatts"/> (without <xmlatt>keyscope</xmlatt> or
          <xmlatt>collection-type</xmlatt>), <ph conkeyref="reuse-attributes/ref-universalatts"/>,
          <xref keyref="attributes-common/attr-format"><xmlatt>format</xmlatt></xref>, <xref
          keyref="attributes-common/attr-scope"><xmlatt>scope</xmlatt></xref>, and <xref
          keyref="attributes-common/attr-type"><xmlatt>type</xmlatt></xref>.</p>
      <p id="attr-exception" outputclass="attr-exception">For this element, the <xmlatt>toc</xmlatt> attribute has a default
        value of <keyword>no</keyword>.</p>
    </section>
<example id="example" otherprops="examples"><title>Example</title>
      <draft-comment author="Kristen J Eberlein" time="22 November 2021">
        <p>Consensus from editors' call today: this example needs a
          significant rework.</p>
      </draft-comment><p>In the following code sample, a relationship table is defined with three
        columns: one for "concept", one for "task", and one for
        "reference". Three cells are defined within each row. The first
        cell contains one concept topic:
          <filepath>about-MyDevice.dita</filepath>. The second cell
        contains two task topics:
          <filepath>setting-up-MyDevice.dita</filepath> and
          <filepath>operating-MyDevice.dita</filepath>. The third cell
        contains two reference topics:
          <filepath>MyDevice-settings.dita</filepath> and
          <filepath>MyDevice-version-info.dita</filepath>.</p><codeblock>&lt;map&gt;
  &lt;reltable&gt;
    &lt;relheader&gt;
      &lt;relcolspec type="concept"/&gt;
      &lt;relcolspec type="task"/&gt;
      &lt;relcolspec type="reference"/&gt;
    &lt;/relheader&gt;
    &lt;relrow&gt;
      &lt;relcell&gt;
        &lt;topicref href="about-MyDevice.dita"/&gt;
      &lt;/relcell&gt;
      &lt;relcell&gt;
        &lt;topicref href="setting-up-MyDevice.dita"/&gt;
        &lt;topicref href="operating-MyDevice.dita"/&gt;
      &lt;/relcell&gt;
      &lt;relcell&gt;
        &lt;topicref href="MyDevice-settings.dita"/&gt;
        &lt;topicref href="MyDevice-version-info.dita"/&gt;
      &lt;/relcell&gt;
    &lt;/relrow&gt;
  &lt;/reltable&gt;
&lt;/map&gt;</codeblock><p>A graphical version of the relationship table in an editor might look like this:</p>
      <draft-comment author="Kristen J Eberlein" time="02 December 2021">
        <p>Replace with a screen capture</p>
      </draft-comment><simpletable>
<sthead>
<stentry>type="concept"</stentry>
<stentry>type="task"</stentry>
<stentry>type="reference"</stentry>
</sthead>
<strow>
<stentry><filepath>about-MyDevice.dita</filepath></stentry>
<stentry><lines><filepath>setting-up-MyDevice.dita</filepath>
<filepath>operating-MyDevice.dita</filepath></lines></stentry>
<stentry><lines><filepath>MyDevice-settings.dita</filepath>
<filepath>MyDevice-version-info.dita</filepath></lines></stentry>
</strow>
</simpletable><p>When rendered, links are added to topics that are in the same row, but not in the same cell. This
        allows simple maintenance of parallel relationships: for example, in this case,
          <filepath>setting-up-MyDevice.dita</filepath> and
          <filepath>operating-MyDevice.dita</filepath> are two tasks that require the same
        supporting information (concept and reference topics) but might otherwise be unrelated. When
        topics in the same cell are in fact related, the <xmlatt>collection-type</xmlatt> attribute
        for the cell can be set to <keyword>family</keyword>. If some cells or columns are intended
        solely as supporting information and should not link back to topics in other cells, you can
        set the <xmlatt>linking</xmlatt> attribute on the <xmlelement>relcell</xmlelement> or
          <xmlelement>relcolspec</xmlelement> to <keyword>targetonly</keyword>.</p><p>In this example, the related links would be as follows:</p>
      <draft-comment author="Kristen J Eberlein" time="02 December 2021">
        <p>Comment from Robert Anderson in the DITAweb review of this
          topic:</p>
        <p>This organization as a definition list bothers me; it's simply a
          list of file names, it feels like there should be more
          explanatory text, even something like "links to"</p>
      </draft-comment>
      <dl>
        <dlentry>
          <dt><filepath>about-MyDevice.dita</filepath></dt>
          <dd><filepath>setting-up-MyDevice.dita</filepath>,
              <filepath>operating-MyDevice.dita</filepath>,
              <filepath>MyDevice-settings.dita</filepath>,
              <filepath>MyDevice-version-info.dita</filepath></dd>
        </dlentry>
        <dlentry>
          <dt><filepath>setting-up-MyDevice.dita</filepath></dt>
          <dd><filepath>about-MyDevice.dita</filepath>,
              <filepath>MyDevice-settings.dita</filepath>,
              <filepath>MyDevice-version-info.dita</filepath></dd>
        </dlentry>
        <dlentry>
          <dt><filepath>operating-MyDevice.dita</filepath></dt>
          <dd><filepath>about-MyDevice.dita</filepath>,
              <filepath>MyDevice-settings.dita</filepath>,
              <filepath>MyDevice-version-info.dita</filepath></dd>
        </dlentry>
        <dlentry>
          <dt><filepath>MyDevice-settings.dita</filepath></dt>
          <dd><filepath>about-MyDevice.dita</filepath>,
              <filepath>setting-up-MyDevice.dita</filepath>,
              <filepath>operating-MyDevice.dita</filepath></dd>
        </dlentry>
        <dlentry>
          <dt>
            <filepath>MyDevice-version-info.dita</filepath></dt>
          <dd><filepath>about-MyDevice.dita</filepath>,
              <filepath>setting-up-MyDevice.dita</filepath>,
              <filepath>operating-MyDevice.dita</filepath></dd>
        </dlentry>
      </dl><p>Relationship tables are inherently an efficient way to manage these
        links. In particular, they increase the prospect for reuse among
        topics, because those topics do not contain context-specific links.
        A relationship table also makes it easy to see and manage patterns;
        for example, the fact that
          <filepath>operating-MyDevice.dita</filepath> and
          <filepath>setting-up-MyDevice.dita</filepath> have the same
        relationships to supporting information is clear from the table,
        but would require some comparison and counting to determine from
        the list summary just before this paragraph.</p></example>
</refbody>
</reference>

